{"ast":null,"code":"import _objectSpread from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// sampleReducer.js\nimport { createReducer, createActions } from 'reduxsauce';\nimport { createTypes } from 'reduxsauce';\n\nvar _createActions = createActions({\n  processOrder: ['products'],\n  orderSuccess: {},\n  orderFailure: ['error']\n}),\n    Types = _createActions.Types,\n    Creators = _createActions.Creators;\n\nexport var ordersActions = Creators;\nconsole.log(Creators); // the initial state of this reducer\n\nexport var INITIAL_STATE = {\n  error: false,\n  currentOrder: {\n    items: [],\n    totalPrice: null,\n    wasNotified: false\n  },\n  previousOrders: [] // // the eagle has landed\n  // export const success = (state = INITIAL_STATE, action) => {\n  //   return { ...state, error: false, goodies: action.goodies }\n  // }\n  // uh oh\n\n};\nexport var failure = function failure() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    error: true\n  });\n};\nexport default createReducer(INITIAL_STATE, HANDLERS);","map":{"version":3,"sources":["/Users/gadigomez/Development/cra-redux-observable/src/reducers/orders.js"],"names":["createReducer","createActions","createTypes","processOrder","orderSuccess","orderFailure","Types","Creators","ordersActions","console","log","INITIAL_STATE","error","currentOrder","items","totalPrice","wasNotified","previousOrders","failure","state","action","HANDLERS"],"mappings":";AAAA;AACA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C;AACA,SAASC,WAAT,QAA4B,YAA5B;;qBAE4BD,aAAa,CAAC;AACtCE,EAAAA,YAAY,EAAE,CAAC,UAAD,CADwB;AAEtCC,EAAAA,YAAY,EAAE,EAFwB;AAGtCC,EAAAA,YAAY,EAAE,CAAC,OAAD;AAHwB,CAAD,C;IAAjCC,K,kBAAAA,K;IAAOC,Q,kBAAAA,Q;;AAMf,OAAO,IAAMC,aAAa,GAAGD,QAAtB;AAEPE,OAAO,CAACC,GAAR,CAAYH,QAAZ,E,CAEA;;AACA,OAAO,IAAMI,aAAa,GAAG;AACzBC,EAAAA,KAAK,EAAE,KADkB;AAEzBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAC,EADI;AAEVC,IAAAA,UAAU,EAAE,IAFF;AAGVC,IAAAA,WAAW,EAAE;AAHH,GAFW;AAOzBC,EAAAA,cAAc,EAAE,EAPS,CAU7B;AACA;AACA;AACA;AAEA;;AAf6B,CAAtB;AAgBP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BR,aAA0B;AAAA,MAAXS,MAAW;AACxD,2BAAYD,KAAZ;AAAmBP,IAAAA,KAAK,EAAE;AAA1B;AACD,CAFM;AAMP,eAAeZ,aAAa,CAACW,aAAD,EAAgBU,QAAhB,CAA5B","sourcesContent":["// sampleReducer.js\nimport { createReducer, createActions } from 'reduxsauce'\nimport { createTypes } from 'reduxsauce'\n\nconst { Types, Creators } = createActions({\n    processOrder: ['products'],\n    orderSuccess: {},\n    orderFailure: ['error']\n  })\n\nexport const ordersActions = Creators;\n\nconsole.log(Creators);\n\n// the initial state of this reducer\nexport const INITIAL_STATE = { \n    error: false, \n    currentOrder: {\n        items:[],\n        totalPrice: null,\n        wasNotified: false\n    },\n    previousOrders: []\n}\n\n// // the eagle has landed\n// export const success = (state = INITIAL_STATE, action) => {\n//   return { ...state, error: false, goodies: action.goodies }\n// }\n\n// uh oh\nexport const failure = (state = INITIAL_STATE, action) => {\n  return { ...state, error: true}\n}\n\n\n\nexport default createReducer(INITIAL_STATE, HANDLERS)"]},"metadata":{},"sourceType":"module"}