{"ast":null,"code":"import { delay, map } from 'rxjs/operators';\nexport var productsEpic = function productsEpic(action$) {\n  return action$.ofType(\"UPDATE_COUNTER2\").pipe(delay(1000), // Asynchronously wait 1000ms then continue\n  map(function (action) {\n    return {\n      type: \"UPDATE_COMPLETE\",\n      payload: action.payload\n    };\n  }));\n};","map":{"version":3,"sources":["/Users/gadigomez/Development/cra-redux-observable/src/epics/products.js"],"names":["delay","map","productsEpic","action$","ofType","pipe","action","type","payload"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,QAA2B,gBAA3B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,OAAO;AAAA,SACnCA,OAAO,CAACC,MAAR,CAAe,iBAAf,EACGC,IADH,CAEGL,KAAK,CAAC,IAAD,CAFR,EAEgB;AACbC,EAAAA,GAAG,CAAC,UAACK,MAAD;AAAA,WACH;AACCC,MAAAA,IAAI,EAAE,iBADP;AAECC,MAAAA,OAAO,EAAEF,MAAM,CAACE;AAFjB,KADG;AAAA,GAAD,CAHN,CADmC;AAAA,CAA5B","sourcesContent":["import { delay, map } from 'rxjs/operators';\n\nexport const productsEpic = action$ =>\naction$.ofType(\"UPDATE_COUNTER2\")\n  .pipe(\n   delay(1000), // Asynchronously wait 1000ms then continue\n   map((action) => (\n    {\n     type: \"UPDATE_COMPLETE\",\n     payload: action.payload\n    })\n  ))"]},"metadata":{},"sourceType":"module"}