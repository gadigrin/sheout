{"ast":null,"code":"import _defineProperty from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _HANDLERS;\n\n// sampleReducer.js\nimport { createReducer, createActions } from 'reduxsauce'; // *************** types and action creators\n\nvar _createActions = createActions({\n  addToCart: ['product', 'amount'],\n  processOrder: ['products'] // orderSuccess: {},\n  // orderFailure: ['error']\n\n}),\n    Types = _createActions.Types,\n    Creators = _createActions.Creators;\n\nexport var ordersActions = Creators; // *************** initial state\n\nexport var INITIAL_STATE = {\n  error: false,\n  cart: [],\n  totalCartPrice: 0,\n  totalCartItems: 0,\n  previousOrders: [] // *************** reducers\n\n};\nexport var processOrder = function processOrder() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n  return _objectSpread({}, state, {\n    error: false\n  });\n};\nexport var addToCart = function addToCart() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var product = action.product;\n  console.log(product);\n  var newPrice = state.totalCartPrice + product.price * product.amount;\n  var newTotal = state.totalCartItems + product.amount;\n  return _objectSpread({}, state, {\n    totalCartItems: newTotal,\n    totalCartPrice: newPrice,\n    cart: [].concat(_toConsumableArray(state.cart), [product]),\n    error: false\n  });\n}; // *************** Handlers\n\nexport var HANDLERS = (_HANDLERS = {}, _defineProperty(_HANDLERS, Types.PROCESS_ORDER, processOrder), _defineProperty(_HANDLERS, Types.ADD_TO_CART, addToCart), _HANDLERS);\nexport default createReducer(INITIAL_STATE, HANDLERS);","map":{"version":3,"sources":["/Users/gadigomez/Development/cra-redux-observable/src/reducers/orders.js"],"names":["createReducer","createActions","addToCart","processOrder","Types","Creators","ordersActions","INITIAL_STATE","error","cart","totalCartPrice","totalCartItems","previousOrders","state","action","console","log","product","newPrice","price","amount","newTotal","HANDLERS","PROCESS_ORDER","ADD_TO_CART"],"mappings":";;;;;;AAAA;AACA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C,C,CAGA;;qBAE4BA,aAAa,CAAC;AACtCC,EAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,QAAZ,CAD2B;AAEtCC,EAAAA,YAAY,EAAE,CAAC,UAAD,CAFwB,CAGtC;AACA;;AAJsC,CAAD,C;IAAjCC,K,kBAAAA,K;IAAOC,Q,kBAAAA,Q;;AAOf,OAAO,IAAMC,aAAa,GAAGD,QAAtB,C,CAEP;;AAEA,OAAO,IAAME,aAAa,GAAG;AACzBC,EAAAA,KAAK,EAAE,KADkB;AAEzBC,EAAAA,IAAI,EAAE,EAFmB;AAGzBC,EAAAA,cAAc,EAAE,CAHS;AAIzBC,EAAAA,cAAc,EAAE,CAJS;AAKzBC,EAAAA,cAAc,EAAE,EALS,CAQ7B;;AAR6B,CAAtB;AAUP,OAAO,IAAMT,YAAY,GAAG,SAAfA,YAAe,GAAmC;AAAA,MAAlCU,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,2BAAWD,KAAX;AAAkBL,IAAAA,KAAK,EAAE;AAAzB;AACH,CAHM;AAKP,OAAO,IAAMN,SAAS,GAAG,SAAZA,SAAY,GAAmC;AAAA,MAAlCW,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;AAAA,MACnDG,OADmD,GACxCH,MADwC,CACnDG,OADmD;AAExDF,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,MAAIC,QAAQ,GAAGL,KAAK,CAACH,cAAN,GAAuBO,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,MAA9D;AACA,MAAIC,QAAQ,GAAGR,KAAK,CAACF,cAAN,GAAuBM,OAAO,CAACG,MAA9C;AACA,2BAAYP,KAAZ;AAAmBF,IAAAA,cAAc,EAAEU,QAAnC;AAA6CX,IAAAA,cAAc,EAAEQ,QAA7D;AAAuET,IAAAA,IAAI,+BAAMI,KAAK,CAACJ,IAAZ,IAAkBQ,OAAlB,EAA3E;AAAsGT,IAAAA,KAAK,EAAE;AAA7G;AACH,CANM,C,CAQP;;AAEA,OAAO,IAAMc,QAAQ,+CAChBlB,KAAK,CAACmB,aADU,EACMpB,YADN,8BAEhBC,KAAK,CAACoB,WAFU,EAEItB,SAFJ,aAAd;AAMP,eAAeF,aAAa,CAACO,aAAD,EAAgBe,QAAhB,CAA5B","sourcesContent":["// sampleReducer.js\nimport { createReducer, createActions } from 'reduxsauce'\n\n\n// *************** types and action creators\n\nconst { Types, Creators } = createActions({\n    addToCart: ['product', 'amount'],\n    processOrder: ['products'],\n    // orderSuccess: {},\n    // orderFailure: ['error']\n})\n\nexport const ordersActions = Creators;\n\n// *************** initial state\n\nexport const INITIAL_STATE = {\n    error: false,\n    cart: [],\n    totalCartPrice: 0, \n    totalCartItems: 0,\n    previousOrders: []\n}\n\n// *************** reducers\n\nexport const processOrder = (state = INITIAL_STATE, action) => {\n    console.log(action);\n    return {...state, error: false }\n}\n\nexport const addToCart = (state = INITIAL_STATE, action) => {\n    let {product} = action\n    console.log(product);\n    let newPrice = state.totalCartPrice + product.price * product.amount;\n    let newTotal = state.totalCartItems + product.amount;\n    return { ...state, totalCartItems: newTotal, totalCartPrice: newPrice, cart: [...state.cart, product],error: false };\n}\n\n// *************** Handlers\n\nexport const HANDLERS = {\n    [Types.PROCESS_ORDER]: processOrder,\n    [Types.ADD_TO_CART]: addToCart\n}\n\n\nexport default createReducer(INITIAL_STATE, HANDLERS)"]},"metadata":{},"sourceType":"module"}