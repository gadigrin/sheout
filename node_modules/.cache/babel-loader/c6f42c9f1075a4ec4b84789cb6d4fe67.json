{"ast":null,"code":"import _objectSpread from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gadigomez/Development/cra-redux-observable/src/components/Menu.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Menu.css\";\nimport Modal from \"react-modal\";\n\nvar MenuComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MenuComponent, _React$Component);\n\n  function MenuComponent(props) {\n    _classCallCheck(this, MenuComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuComponent).call(this, props));\n  }\n\n  _createClass(MenuComponent, [{\n    key: \"addToCart\",\n    value: function addToCart(product) {\n      console.log(product, \"added to cart\");\n      this.setState({\n        selectedProduct: product,\n        showModel: true\n      });\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal(didFinishOrder) {\n      if (!this.state.chosenAmount) {\n        this.setState({\n          showAmountError: true\n        });\n      } else {\n        if (didFinishOrder) {\n          this.props.addProductToCart(_objectSpread({}, this.state.selectedProduct, {\n            amount: this.state.chosenAmount\n          }));\n          console.log(this.state);\n        }\n\n        this.setState({\n          showModel: false,\n          chosenAmount: null,\n          selectedProduct: null,\n          showAmountError: false\n        });\n      }\n    }\n  }, {\n    key: \"onChangeAmount\",\n    value: function onChangeAmount(amount) {\n      this.setState({\n        chosenAmount: amount.value,\n        showAmountError: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Cart: \")));\n    }\n  }]);\n\n  return MenuComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.productReducer.products,\n    cart: state.ordersReducer.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {// addProductToCart: (product) => {\n    //   dispatch(ordersActions.addToCart(product));\n    // },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuComponent);","map":{"version":3,"sources":["/Users/gadigomez/Development/cra-redux-observable/src/components/Menu.js"],"names":["React","connect","Modal","MenuComponent","props","product","console","log","setState","selectedProduct","showModel","didFinishOrder","state","chosenAmount","showAmountError","addProductToCart","amount","value","Component","mapStateToProps","products","productReducer","cart","ordersReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sFACXA,KADW;AAGlB;;;;8BAESC,O,EAAS;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,eAArB;AACA,WAAKG,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAEJ,OADL;AAEZK,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID;;;qCAEgBC,c,EAAgB;AAC/B,UAAI,CAAC,KAAKC,KAAL,CAAWC,YAAhB,EAA8B;AAC5B,aAAKL,QAAL,CAAc;AAAEM,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD,OAFD,MAEO;AACL,YAAIH,cAAJ,EAAoB;AAClB,eAAKP,KAAL,CAAWW,gBAAX,mBACK,KAAKH,KAAL,CAAWH,eADhB;AAEEO,YAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC;AAFrB;AAIAP,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAjB;AACD;;AACD,aAAKJ,QAAL,CAAc;AACZE,UAAAA,SAAS,EAAE,KADC;AAEZG,UAAAA,YAAY,EAAE,IAFF;AAGZJ,UAAAA,eAAe,EAAE,IAHL;AAIZK,UAAAA,eAAe,EAAE;AAJL,SAAd;AAMD;AACF;;;mCAEcE,M,EAAQ;AACrB,WAAKR,QAAL,CAAc;AACZK,QAAAA,YAAY,EAAEG,MAAM,CAACC,KADT;AAEZH,QAAAA,eAAe,EAAE;AAFL,OAAd;AAID;;;6BAEQ;AACLR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACF,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CADF;AAOD;;;;EAlDyBJ,KAAK,CAACkB,S;;AAqDlC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD,EAAW;AACjC,SAAO;AACLQ,IAAAA,QAAQ,EAAER,KAAK,CAACS,cAAN,CAAqBD,QAD1B;AAELE,IAAAA,IAAI,EAAEV,KAAK,CAACW,aAAN,CAAoBD;AAFrB,GAAP;AAID,CALD;;AAOA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO,CACL;AACA;AACA;AAHK,GAAP;AAKD,CAND;;AAQA,eAAexB,OAAO,CACpBkB,eADoB,EAEpBK,kBAFoB,CAAP,CAGbrB,aAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Menu.css\";\nimport Modal from \"react-modal\";\n\nclass MenuComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  addToCart(product) {\n    console.log(product, \"added to cart\");\n    this.setState({\n      selectedProduct: product,\n      showModel: true,\n    });\n  }\n\n  handleCloseModal(didFinishOrder) {\n    if (!this.state.chosenAmount) {\n      this.setState({ showAmountError: true });\n    } else {\n      if (didFinishOrder) {\n        this.props.addProductToCart({\n          ...this.state.selectedProduct,\n          amount: this.state.chosenAmount,\n        });\n        console.log(this.state);\n      }\n      this.setState({\n        showModel: false,\n        chosenAmount: null,\n        selectedProduct: null,\n        showAmountError: false,\n      });\n    }\n  }\n\n  onChangeAmount(amount) {\n    this.setState({\n      chosenAmount: amount.value,\n      showAmountError: false,\n    });\n  }\n\n  render() {\n      console.log(this.props);\n    return (\n      <div className=\"menu\">\n          <div className=\"item\">\n              <p>Cart: {}</p>\n          </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.productReducer.products,\n    cart: state.ordersReducer.cart,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // addProductToCart: (product) => {\n    //   dispatch(ordersActions.addToCart(product));\n    // },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuComponent);\n"]},"metadata":{},"sourceType":"module"}