{"ast":null,"code":"import _objectSpread from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _HANDLERS;\n\n// sampleReducer.js\nimport { createReducer } from 'reduxsauce';\nimport { createTypes } from 'reduxsauce';\nvar Types = createTypes(\"\\nPROCESS_ORDER\\nORDER_SUCCESS\\nORDER_FAILED\\nGET_ORDERS\\n\"); // map our action types to our reducer functions\n\nexport var HANDLERS = (_HANDLERS = {}, _defineProperty(_HANDLERS, Types.GOODS_SUCCESS, success), _defineProperty(_HANDLERS, Types.GOODS_FAILURE, failure), _HANDLERS); // the initial state of this reducer\n\nexport var INITIAL_STATE = {\n  error: false,\n  currentOrder: {\n    items: [],\n    totalPrice: null,\n    wasNotified: false\n  },\n  previousOrders: [] // // the eagle has landed\n  // export const success = (state = INITIAL_STATE, action) => {\n  //   return { ...state, error: false, goodies: action.goodies }\n  // }\n  // uh oh\n\n};\nexport var failure = function failure() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    error: true\n  });\n};\nexport default createReducer(INITIAL_STATE, HANDLERS);","map":{"version":3,"sources":["/Users/gadigomez/Development/cra-redux-observable/src/reducers/orders.js"],"names":["createReducer","createTypes","Types","HANDLERS","GOODS_SUCCESS","success","GOODS_FAILURE","failure","INITIAL_STATE","error","currentOrder","items","totalPrice","wasNotified","previousOrders","state","action"],"mappings":";;;;;AAAA;AACA,SAASA,aAAT,QAA8B,YAA9B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,IAAMC,KAAK,GAAGD,WAAW,8DAAzB,C,CAOA;;AACA,OAAO,IAAME,QAAQ,+CAChBD,KAAK,CAACE,aADU,EACMC,OADN,8BAEhBH,KAAK,CAACI,aAFU,EAEMC,OAFN,aAAd,C,CAKP;;AACA,OAAO,IAAMC,aAAa,GAAG;AACzBC,EAAAA,KAAK,EAAE,KADkB;AAEzBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAC,EADI;AAEVC,IAAAA,UAAU,EAAE,IAFF;AAGVC,IAAAA,WAAW,EAAE;AAHH,GAFW;AAOzBC,EAAAA,cAAc,EAAE,EAPS,CAU7B;AACA;AACA;AACA;AAEA;;AAf6B,CAAtB;AAgBP,OAAO,IAAMP,OAAO,GAAG,SAAVA,OAAU,GAAmC;AAAA,MAAlCQ,KAAkC,uEAA1BP,aAA0B;AAAA,MAAXQ,MAAW;AACxD,2BAAYD,KAAZ;AAAmBN,IAAAA,KAAK,EAAE;AAA1B;AACD,CAFM;AAMP,eAAeT,aAAa,CAACQ,aAAD,EAAgBL,QAAhB,CAA5B","sourcesContent":["// sampleReducer.js\nimport { createReducer } from 'reduxsauce'\nimport { createTypes } from 'reduxsauce'\n\nconst Types = createTypes(`\nPROCESS_ORDER\nORDER_SUCCESS\nORDER_FAILED\nGET_ORDERS\n`)\n\n// map our action types to our reducer functions\nexport const HANDLERS = {\n    [Types.GOODS_SUCCESS]: success,\n    [Types.GOODS_FAILURE]: failure\n  }\n\n// the initial state of this reducer\nexport const INITIAL_STATE = { \n    error: false, \n    currentOrder: {\n        items:[],\n        totalPrice: null,\n        wasNotified: false\n    },\n    previousOrders: []\n}\n\n// // the eagle has landed\n// export const success = (state = INITIAL_STATE, action) => {\n//   return { ...state, error: false, goodies: action.goodies }\n// }\n\n// uh oh\nexport const failure = (state = INITIAL_STATE, action) => {\n  return { ...state, error: true}\n}\n\n\n\nexport default createReducer(INITIAL_STATE, HANDLERS)"]},"metadata":{},"sourceType":"module"}