{"ast":null,"code":"import _defineProperty from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gadigomez/Development/cra-redux-observable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gadigomez/Development/cra-redux-observable/src/components/CartModal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Modal from \"react-modal\";\nimport { cartActions } from \"../reducers/cart\";\nimport \"./styles/CartModal.css\";\n\nvar CartModalComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CartModalComponent, _React$Component);\n\n  function CartModalComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CartModalComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CartModalComponent).call(this, props));\n    _this.state = {//   selectedProduct: null,\n      //   showModel: false,\n      //   chosenAmount: null,\n      //   showAmountError: false,\n    }; // this.addToCart = this.addToCart.bind(this);\n    // this.handleCloseModal = this.handleCloseModal.bind(this);\n    // this.onChangeAmount = this.onChangeAmount.bind(this);\n\n    return _this;\n  }\n\n  _createClass(CartModalComponent, [{\n    key: \"renderCartItems\",\n    value: function renderCartItems() {\n      console.log();\n\n      if (this.props.cart.length == 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Your cart is empty... \");\n      }\n\n      return this.props.cart.map(function (cartItem) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: cartItem.imageUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, cartItem.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, cartItem.title)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      // const productsList = this.props.products.map((product) => (\n      //   <div key={product.id} className=\"product-item-wrapper\">\n      //     <h4> {product.title} </h4>\n      //     <img alt=\"\" src={product.imageUrl} className=\"product-image\" />\n      //     <p>rating: {product.rating} stars</p>\n      //     <p> Price: {product.price}$ </p>\n      //     <button onClick={() => this.addToCart(product)}> Add to order </button>\n      //   </div>\n      // ));\n      return React.createElement(Modal, (_React$createElement = {\n        isOpen: this.props.isVisible,\n        onRequestClose: this.handleCloseModal,\n        ariaHideApp: false\n      }, _defineProperty(_React$createElement, \"ariaHideApp\", false), _defineProperty(_React$createElement, \"className\", \"cart-modal\"), _defineProperty(_React$createElement, \"overlayClassName\", \"cart-Overlay\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Your Cart\"), React.createElement(\"div\", {\n        className: \"cart-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.renderCartItems()), React.createElement(\"div\", {\n        className: \"buttons-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.closeCart();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"close\"), React.createElement(\"button\", {\n        disabled: this.props.cart.length === 0,\n        onClick: function onClick() {\n          return _this2.props.closeCart();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Submit Order\")));\n    }\n  }]);\n\n  return CartModalComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartTotalItems: state.cartReducer.totalCartItems,\n    cart: state.cartReducer.cart,\n    cartPrice: state.cartReducer.totalCartPrice,\n    isVisible: state.cartReducer.showCart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProductToCart: function addProductToCart(product) {\n      dispatch(cartActions.addToCart(product));\n    },\n    closeCart: function closeCart() {\n      dispatch(cartActions.showCart());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartModalComponent);","map":{"version":3,"sources":["/Users/gadigomez/Development/cra-redux-observable/src/components/CartModal.js"],"names":["React","connect","Dropdown","Modal","cartActions","CartModalComponent","props","state","console","log","cart","length","map","cartItem","imageUrl","title","isVisible","handleCloseModal","renderCartItems","closeCart","Component","mapStateToProps","cartTotalItems","cartReducer","totalCartItems","cartPrice","totalCartPrice","showCart","mapDispatchToProps","dispatch","addProductToCart","product","addToCart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport Modal from \"react-modal\";\nimport { cartActions } from \"../reducers/cart\";\nimport \"./styles/CartModal.css\";\n\nclass CartModalComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //   selectedProduct: null,\n      //   showModel: false,\n      //   chosenAmount: null,\n      //   showAmountError: false,\n    };\n    // this.addToCart = this.addToCart.bind(this);\n    // this.handleCloseModal = this.handleCloseModal.bind(this);\n    // this.onChangeAmount = this.onChangeAmount.bind(this);\n  }\n\n  renderCartItems() {\n    console.log();\n    if (this.props.cart.length == 0) {\n        return (<p>Your cart is empty... </p>)\n    }\n    return(\n        this.props.cart.map(cartItem => (\n          <div className=\"item\">\n              <img src={cartItem.imageUrl} />\n              <div className=\"details\">\n                  <p>{cartItem.title}</p>\n                  <p>{cartItem.title}</p>\n              </div>\n          </div>  \n        ))\n    )\n  }\n\n  render() {\n    // const productsList = this.props.products.map((product) => (\n    //   <div key={product.id} className=\"product-item-wrapper\">\n    //     <h4> {product.title} </h4>\n    //     <img alt=\"\" src={product.imageUrl} className=\"product-image\" />\n    //     <p>rating: {product.rating} stars</p>\n    //     <p> Price: {product.price}$ </p>\n    //     <button onClick={() => this.addToCart(product)}> Add to order </button>\n    //   </div>\n    // ));\n    return (\n      <Modal\n        isOpen={this.props.isVisible}\n        onRequestClose={this.handleCloseModal}\n        ariaHideApp={false}\n        ariaHideApp={false}\n        className=\"cart-modal\"\n        overlayClassName=\"cart-Overlay\"\n      >\n        <h2>Your Cart</h2>\n        <div className=\"cart-content\">\n            {this.renderCartItems()}\n        </div>\n        <div className=\"buttons-wrapper\">\n          <button onClick={() => this.props.closeCart()}>close</button>\n          <button disabled={this.props.cart.length === 0} onClick={() => this.props.closeCart()}>Submit Order</button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cartTotalItems: state.cartReducer.totalCartItems,\n    cart: state.cartReducer.cart,\n    cartPrice: state.cartReducer.totalCartPrice,\n    isVisible: state.cartReducer.showCart,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addProductToCart: (product) => {\n      dispatch(cartActions.addToCart(product));\n    },\n    closeCart: () => {\n      dispatch(cartActions.showCart());\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CartModalComponent);\n"]},"metadata":{},"sourceType":"module"}